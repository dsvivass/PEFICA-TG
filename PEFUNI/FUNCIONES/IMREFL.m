% imprimir resultados de problemas de barras sometidas a flexiónfunction IMREFL(IMPR,XYZ,ELE,UXY,FXY,REL,RIL,URI,TIPE,...            ADAT,NUEL,CAE,DIRA,DIRO,...            FM,NXIP,NIT,DES,GIR)% entrada:  IMPR: opciones de impresión de resultados%           XYZ: número de nudos de la malla%           ELE:  tabla de conectividades de los elementos%           UXY:  tabla de desplazamientos en los nudos%           FXY:  tabla de fuerzas en los nudos%           REL:  tabla de desplazam, rotaciones, cortante, momento%                 en los nudos de cada elemento%           RIL:  tabla de desplazamientos en el interior de cada elemento%           URI:  índice que ubican los nudos de los elementos en RIL()        NNUD = size(XYZ,1); % número de nudos    NELE = size(ELE,1); % número de elementos    switch TIPE %%M-DV%% Tipo de analisis para titulo de grafica        case 111            TANA = 'Euler-Bernoulli';        case 112            TANA = 'Timoshenko_1PG';        case 113            TANA = 'Timoshenko_2PG';    end        %%M-DV%% Presentacion resultados GiD    if (IMPR==4) || (IMPR==9)        IMGIDM(ADAT,NUEL,NNUD,XYZ,NELE,ELE,DIRA,DIRO); %%M-DV%% Imprimir mesh para GiD        IMGIDR(ADAT,NUEL,CAE,NELE,FM,NXIP,NIT,DIRA,DIRO,DES,GIR); %%M-DV%% Imprimir resultados para GiD    end       % presentación de resultados en pantalla    if (IMPR==1) || (IMPR==8) || (IMPR==9)      fprintf('\n-------------------------------- \nResultados en los nudos, %s',TANA);      fprintf('\nDesplazamientos en los nudos \n[ INUD DESY ROTZ ], %s', TANA);      [(1:NNUD)',UXY]      fprintf('\nFuerzas en los nudos \n[ INUD FUEY MOMZ ], %s', TANA);      [(1:NNUD)',FXY]      fprintf('\nResultados en los elementos');      fprintf('\n[ DEYI ROZI DEYJ ROJ FUYI MOZI FUYJ MOJ ], %s', TANA);      [(1:NELE)' REL]    end % endif        %%M-DV%% presentación de resultados en gráficas de Octave    if (IMPR==2) || (IMPR==8)  || (IMPR==9)        % desplazamientos en los nudos TEP(), y en los elementos RIL()      TEM = [XYZ,UXY];      TEP = sortrows(TEM,1);      TAM=get(0,'ScreenSize'); %%M-DV%% toma el tamano de la pantalla      switch NIT %%M-DV%% Numero de iteracion para posicion en pantalla          %%M-DV%% POS: Posicion en la pantalla, de izquierda a derecha          case 0              POS = 0;          case 1              POS = 0;          case 2              POS = TAM(4)/2;          case 3              POS = TAM(4);      end      figure('position',[POS 0 TAM(4)/2 TAM(4)]); %%M-DV%%       s(1) = subplot(3,1,1);      plot (TEP(:,1),TEP(:,2),'or',RIL(:,1),RIL(:,2),'r-');      title(s(1),['\fontsize{16} Desplazamiento, ', TANA], 'Color', 'b');      xlabel ('XPOS'); ylabel('UDES'); grid on;           % fuerza cortante%       figure('Name','Fuerza cortante');      s(2) = subplot(3,1,2);      plot (RIL(:,1),RIL(:,3),'r-',RIL(URI,1),RIL(URI,3),'or');      title(s(2),['\fontsize{16} Fuerza Cortante, ', TANA], 'Color', 'b');      xlabel ('XPOS'); ylabel('VCOR'); grid on;      % momento flector%       figure('Name','Momento flector');      s(3) = subplot(3,1,3);      plot (RIL(:,1),RIL(:,4),'r-',RIL(URI,1),RIL(URI,4),'or');      title(s(3),['\fontsize{16} Momento flector, ', TANA], 'Color', 'b');      xlabel ('XPOS'); ylabel('MOME'); grid on;    end % endif    % PENDIENTE% dibujar geometría en TikZ LaTeX%    if (IMPR==3) || (IMPR==9)%      TINI = IMTIEM('\nDibujar de geometría en Tikz LaTex ',0);%      % -----------------------------------------------------------------------%      % construir archivo gráfico tikz para latex con geometría%      ADAD = strcat('./DATOS/',ADAT);%      TIPN = 3; % numerar nudos y elementos%      IMTIKZ(ADAD,NNUD,NELE,XYZ,ELE,CAT,UCO,FUN,TIPN);%    end %endif end