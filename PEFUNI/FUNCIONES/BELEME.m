% Matriz B de un elemento finitofunction [MTX] = BELEME(XYE,XIPN,TIPE,TTIMO)  % Entrada:  % XYE():  tabla de coordenadas globales de los nudos del elemento.  % XIPN:   coordenada natural 0<\xi<1 del punto donde se evalúa B  % TIPE:   código del tipo del elemento  % TTIMO:  Tipo de analisis de Timoshenko TTIMO=1 Flexion, TTIMO=2  %         Cortante  %         % Salida:  % MTX():  matriz B del elemento  switch TIPE    case 101 % elemento de fuerza axial unidimensional lineal de continuidad c0      [MTX] = BAXIAL(XYE);    case 102 % elemento de fuerza axial undimensional cuadrático de cont c0      [MTX] = BAXIAC(XYE,XIPN);    case 111 % elemento de flexión undimensional cúbico de continuidad c1      [MTX] = BBEAME(XYE,XIPN);    case 112 % elemento de flexión unidimensional cúbico de cont c1      [MTX] = BBEAMT1(XYE,XIPN,TTIMO);    case 113 % elemento de flexión unidimensional cúbico de cont c1      [MTX] = BBEAMT2(XYE,XIPN,TTIMO);    otherwise      % pendiente  end end% ------------------------------------------------------------------------% matriz B de un elemento de fuerza axial unidimensional lineal de cont c0function [MTX] = BAXIAL(XYE)  % entrada: XYE():  coordenadas de los nudos del elemento  % salida:  MTX():  matriz B del elemento finito  LELE = abs(XYE(2,1)-XYE(1,1)); % longitud del elemento  MTX = (1/LELE)*[ -1 1 ];end% ------------------------------------------------------------------------% matriz B de un elemento de fuerza axial unidimensional cuadrático de cont c0function [MTX] = BAXIAC(XYE,XIPN)  % entrada: XYE():  coordenadas de los nudos del elemento, considerando  %                  los extremos como los dos primeros nudos del elemento  %          XIPN:   coordenada natural 0<\xi<1 del punto donde se evalúa B  % salida:  MTX():  matriz B del elemento finito  LELE = abs(XYE(2,1)-XYE(1,1)); % longitud del elemento  MTX = (1/LELE)*[ (-3+4*XIPN) (-1+4*XIPN) (4-8*XIPN) ];end% ------------------------------------------------------------------------% matriz B de un elemento unidimensional viga de continuidad c1function [MTX] = BBEAME(XYE,XIPN)  % entrada: XYE():  coordenadas de los nudos del elemento  %          XIPN:   coordenada natural 0<\xi<1 del punto donde se evalúa B  % salida:  MTX():  matriz B del elemento finito  LELE = abs(XYE(2,1)-XYE(1,1)); % longitud del elemento  MTX = [ (-6+12*XIPN)/LELE^2 (-4+6*XIPN)/LELE ...          (6-12*XIPN)/LELE^2 (-2+6*XIPN)/LELE ];endfunction [MTX] = BBEAMT1(XYE,XIPN,TTIMO)  % entrada: XYE():  coordenadas de los nudos del elemento  %          XIPN:   coordenada natural 0<\xi<1 del punto donde se evalúa B  % salida:  MTX():  matriz B del elemento finito  LELE = abs(XYE(2,1)-XYE(1,1)); % longitud del elemento  if TTIMO == 1    MTX = [ 0 -1/LELE 0 1/LELE]; %%M-DV%% Matriz Bb por flexion del elemento  elseif TTIMO == 2    MTX = [ -1/LELE XIPN-1 1/LELE -XIPN]; %%M-DV%% Matriz Bs por cortante del elemento  endendfunction [MTX] = BBEAMT2(XYE,XIPN,TTIMO)  % entrada: XYE():  coordenadas de los nudos del elemento  %          XIPN:   coordenada natural 0<\xi<1 del punto donde se evalúa B  % salida:  MTX():  matriz B del elemento finito  LELE = abs(XYE(2,1)-XYE(1,1)); % longitud del elemento  if TTIMO == 1    MTX = [ 0 -1/LELE 0 1/LELE]; %%M-DV%% Matriz Bb por flexion del elemento  elseif TTIMO == 2    MTX = [ -1/LELE XIPN-1 1/LELE -XIPN]; %%M-DV%% Matriz Bs por cortante del elemento  endend